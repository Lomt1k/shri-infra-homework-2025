name: üöÄ –í—ã–∫–∞—Ç–∫–∞ —Ä–µ–ª–∏–∑–∞ –≤ –ø—Ä–æ–¥

on:
  workflow_dispatch:
    inputs:
      release_version:
        type: string
        description: "–í–µ—Ä—Å–∏—è —Ä–µ–ª–∏–∑–∞ –¥–ª—è –≤—ã–ª–∏–≤–∫–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–Ω"
        required: true

jobs:
  deploy_to_prod:
    name: üì¶ –í—ã–ª–∏–≤–∫–∞ v${{ github.workflow.inputs.release_version }} –≤ –ø—Ä–æ–¥
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: write
      issues: write

    env:
      REGISTRY_URL: cr.yandex
      APP_NAME: app
      YC_REGISTRY_ID: ${{ secrets.YC_REGISTRY_ID }}
      RELEASE_VERSION: ${{ github.workflow.inputs.release_version }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
      SERVER_HOST: 158.160.191.214
      SERVER_USER: lomt1k

    steps:
      - name: üîç Checkout –∫–æ–¥–∞
        uses: actions/checkout@v4

      - name: üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker-–æ–±—Ä–∞–∑–∞ –≤ Container Registry
        run: |
          echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—Ä–∞–∑–∞: ${REGISTRY_URL}/${YC_REGISTRY_ID}/${APP_NAME}:${RELEASE_VERSION}_latest"

          # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
          echo "${{ secrets.YC_OAUTH_TOKEN }}" | docker login --username oauth --password-stdin ${REGISTRY_URL}

          # –ü–æ–ø—ã—Ç–∫–∞ —Å–∫–∞—á–∞—Ç—å –º–∞–Ω–∏—Ñ–µ—Å—Ç (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è)
          if ! crane manifest ${REGISTRY_URL}/${YC_REGISTRY_ID}/${APP_NAME}:${RELEASE_VERSION}_latest > /dev/null 2>&1; then
            echo "‚ùå –û–±—Ä–∞–∑ ${REGISTRY_URL}/${YC_REGISTRY_ID}/${APP_NAME}:${RELEASE_VERSION}_latest –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            exit 1
          else
            echo "‚úÖ –û–±—Ä–∞–∑ –Ω–∞–π–¥–µ–Ω ‚Äî –º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –¥–µ–ø–ª–æ–π."
          fi

      - name: üöö –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USER }}
          key: ${{ env.SSH_KEY }}
          script: |
            echo "üîç –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–∑"
            docker pull ${REGISTRY_URL}/${YC_REGISTRY_ID}/${APP_NAME}:${RELEASE_VERSION}_latest

            echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
            docker stop shri-infra || true

            echo "üóë –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
            docker rm shri-infra || true

            echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
            docker run -d \
              --name shri-infra \
              -p 3000:3000 \
              ${REGISTRY_URL}/${YC_REGISTRY_ID}/${APP_NAME}:${RELEASE_VERSION}_latest

      - name: üßæ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ Issue –æ –≤—ã–∫–∞—Ç–∫–µ
        uses: actions/github-script@v6
        with:
          script: |
            const body = `
              üöÄ –†–µ–ª–∏–∑ v${{ env.RELEASE_VERSION }} –≤—ã–∫–∞—á–µ–Ω –≤ –ø—Ä–æ–¥
              üìÖ –î–∞—Ç–∞: ${new Date().toISOString()}
              üë®‚Äçüíª –ê–≤—Ç–æ—Ä: ${{ github.actor }}
              üåê –ê–¥—Ä–µ—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: http://${{ env.SERVER_HOST }}:3000/hw/store
            `;

            // –ò—â–µ–º Issue –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              creator: 'github-actions[bot]',
              state: 'all',
              per_page: 100,
              labels: ''
            });

            const targetIssue = issues.find(issue => issue.title.includes("üöÄ –í—ã–ø—É—Å–∫ —Ä–µ–ª–∏–∑–∞ v${{ env.RELEASE_VERSION }}"));

            if (targetIssue) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: targetIssue.number,
                body: body
              });
            } else {
              console.log('–ù–µ –Ω–∞–π–¥–µ–Ω–æ Issue –¥–ª—è —Ä–µ–ª–∏–∑–∞ v${{ env.RELEASE_VERSION }}');
            }